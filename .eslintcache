[{"D:\\Projects\\React\\fieldnotesmanager\\src\\reportWebVitals.js":"1","D:\\Projects\\React\\fieldnotesmanager\\src\\stories\\Page.js":"2","D:\\Projects\\React\\fieldnotesmanager\\src\\index.js":"3","D:\\Projects\\React\\fieldnotesmanager\\src\\components\\login\\register.jsx":"4","D:\\Projects\\React\\fieldnotesmanager\\src\\components\\login\\login.jsx":"5","D:\\Projects\\React\\fieldnotesmanager\\src\\components\\login\\index.jsx":"6","D:\\Projects\\React\\fieldnotesmanager\\src\\App.jsx":"7"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"9"},{"size":2521,"mtime":499162500000,"results":"10","hashOfConfig":"9"},{"size":500,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":1353,"mtime":1606514291041,"results":"12","hashOfConfig":"9"},{"size":1027,"mtime":1606514211538,"results":"13","hashOfConfig":"9"},{"size":91,"mtime":1606505948988,"results":"14","hashOfConfig":"9"},{"size":1475,"mtime":1606515891305,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ygc0li",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},"D:\\Projects\\React\\fieldnotesmanager\\src\\reportWebVitals.js",[],"D:\\Projects\\React\\fieldnotesmanager\\src\\stories\\Page.js",[],"D:\\Projects\\React\\fieldnotesmanager\\src\\index.js",[],"D:\\Projects\\React\\fieldnotesmanager\\src\\components\\login\\register.jsx",["33"],"import React from \"react\";\r\nimport loginImg from \"../../login.svg\";\r\n\r\nexport class Register extends React.Component{\r\nconstructor(props){\r\n    super(props);\r\n}\r\n render(){\r\n     return (\r\n     <div className=\"base-container\"  ref={this.props.containerRef}>\r\n         <div className=\"header\">Register</div>\r\n         <div className=\"content\">\r\n         <div className=\"image\">\r\n             <img src={loginImg} alt=\"\"/>\r\n         </div>\r\n         <div className=\"form\">\r\n                 <div className=\"form-group\">\r\n                     <label htmlFor=\"Username\">Username</label>\r\n                     <input type=\"text\" name=\"username\" placeholder=\"username\"/>\r\n                 </div>\r\n                 <div className=\"form-group\">\r\n                     <label htmlFor=\"email\">Email</label>\r\n                     <input type=\"text\" name=\"email\" placeholder=\"email\"/>\r\n                 </div>\r\n\r\n                 <div className=\"form-group\">\r\n                     <label htmlFor=\"Password\">Password</label>\r\n                     <input type=\"password\" name=\"password\" placeholder=\"password\"/>\r\n                 </div>\r\n         </div>\r\n         </div>\r\n         <div className=\"footer\">\r\n             <buttom type=\"button\" className=\"btn\">\r\n                Register\r\n             </buttom>\r\n         </div>\r\n        \r\n         \r\n     </div>)\r\n }\r\n\r\n}","D:\\Projects\\React\\fieldnotesmanager\\src\\components\\login\\login.jsx",["34","35"],"import React from \"react\";\r\nimport loginImg from \"../../login.svg\";\r\n\r\nexport class Login extends React.Component{\r\nconstructor(props){\r\n    super(props);\r\n}\r\n render(){\r\n     return (\r\n     <div className=\"base-container\" ref={this.props.containerRef}>\r\n     <div className=\"header\">Login</div>\r\n     <div className=\"content\">\r\n     <div className=\"image\">\r\n         <img src={loginImg} />\r\n     </div>\r\n     <div className=\"form\">\r\n             <div className=\"form-group\">\r\n                 <label htmlFor=\"Username\">Username</label>\r\n                 <input type=\"text\" name=\"username\" placeholder=\"username\"/>\r\n             </div>\r\n             <div className=\"form-group\">\r\n                 <label htmlFor=\"Password\">Password</label>\r\n                 <input type=\"password\" name=\"password\" placeholder=\"password\"/>\r\n             </div>\r\n     </div>\r\n     </div>\r\n     <div className=\"footer\">\r\n         <buttom type=\"button\" className=\"btn\">\r\nLogin\r\n         </buttom>\r\n     </div>\r\n    \r\n     \r\n </div>)\r\n     \r\n }\r\n\r\n}","D:\\Projects\\React\\fieldnotesmanager\\src\\components\\login\\index.jsx",[],"D:\\Projects\\React\\fieldnotesmanager\\src\\App.jsx",["36"],"import React from \"react\";\nimport './App.scss';\nimport { Login, Register } from \"./components/login/index\";\n\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n    this.state={\n      isLogginActive:true,\n    }\n  }\nchangeState (){\n  const {isLogginActive}= this.state;\n  if(isLogginActive){\n    this.rightSide.classList.remove('right');\n    this.rightSide.classList.add('left');\n  }else {\n    this.rightSide.classList.remove('left');\n    this.rightSide.classList.add('right');\n  }\n  \n  this.setState((prevState)=>({isLogginActive: !prevState.isLogginActive}))\n}\n  \n  render(){\n    const{ isLogginActive} = this.state;\n    const current = isLogginActive ? \"Register\":\"Login\";\n    const currentActive = isLogginActive? \"Login\":\"Register\";\n    return(\n      <div className=\"App\">\n        <div className=\"login\">\n          <div className=\"container\">\n            {isLogginActive && <Login containerRef ={(ref)=> this.current = ref }/> }\n         {!isLogginActive && <Register containerRef={(ref)=>this.current = ref} />}\n          </div>    \n<RightSide current={current} containerRef ={ref =>this.rightSide =ref} onClick={this.changeState.bind(this)}/>\n\n      </div>\n    </div>\n  \n    )\n    \n  }\n}\n\nconst RightSide = props=>{\n  return <div className=\"right-side\" ref ={props.containerRef} onClick = {props.onClick}>\n    <div className=\"inner-container\">\n      <div className=\"text\">{props.current}\n\n      </div>\n    </div>\n\n  </div>\n}\n\nexport default App;\n",{"ruleId":"37","severity":1,"message":"38","line":5,"column":1,"nodeType":"39","messageId":"40","endLine":7,"endColumn":2},{"ruleId":"37","severity":1,"message":"38","line":5,"column":1,"nodeType":"39","messageId":"40","endLine":7,"endColumn":2},{"ruleId":"41","severity":1,"message":"42","line":14,"column":10,"nodeType":"43","endLine":14,"endColumn":32},{"ruleId":"44","severity":1,"message":"45","line":28,"column":11,"nodeType":"46","messageId":"47","endLine":28,"endColumn":24},"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'currentActive' is assigned a value but never used.","Identifier","unusedVar"]