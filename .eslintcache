[{"D:\\Projects\\React\\fieldnotesmanager\\src\\components\\navbar.jsx":"1","D:\\Projects\\React\\fieldnotesmanager\\src\\App.jsx":"2","D:\\Projects\\React\\fieldnotesmanager\\src\\components\\login\\login.jsx":"3","D:\\Projects\\React\\fieldnotesmanager\\src\\components\\homepage.jsx":"4","D:\\Projects\\React\\fieldnotesmanager\\src\\components\\mynotes.jsx":"5","D:\\Projects\\React\\fieldnotesmanager\\src\\index.js":"6","D:\\Projects\\React\\fieldnotesmanager\\src\\components\\login\\index.jsx":"7","D:\\Projects\\React\\fieldnotesmanager\\src\\reportWebVitals.js":"8"},{"size":497,"mtime":1606842440810,"results":"9","hashOfConfig":"10"},{"size":4970,"mtime":1606932364621,"results":"11","hashOfConfig":"10"},{"size":1274,"mtime":1606583631252,"results":"12","hashOfConfig":"10"},{"size":2055,"mtime":1606932222335,"results":"13","hashOfConfig":"10"},{"size":478,"mtime":1606932057136,"results":"14","hashOfConfig":"10"},{"size":500,"mtime":499162500000,"results":"15","hashOfConfig":"10"},{"size":128,"mtime":1606843461956,"results":"16","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},"1ygc0li",{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Projects\\React\\fieldnotesmanager\\src\\components\\navbar.jsx",["37"],"import React from 'react';\r\nimport './navbar.scss'\r\n\r\nexport class Navbar extends React.Component{\r\nconstructor(props){\r\n    super(props);\r\n}\r\n\r\n    render(){\r\n        return(\r\n            \r\n<nav id=\"navbar\">  \r\n<p className=\"navhead\">Welcome User</p>\r\n  <ul>\r\n    <li>\r\n        Profile\r\n      \r\n    </li>\r\n    <li onClick={this.props.routeToMyNotes}>\r\n      My Notes\r\n    </li>\r\n    \r\n    <li onClick={this.props.handleLogout}>\r\n          Sign out\r\n    </li>\r\n  </ul>\r\n</nav>\r\n        )\r\n    }\r\n}","D:\\Projects\\React\\fieldnotesmanager\\src\\App.jsx",["38","39"],"import React from \"react\";\nimport './App.scss';\nimport { Login, Register,Homepage,MyNotes } from \"./components/login/index\";\nimport fire from \"../src/fire\";\nimport {BrowserRouter as Router, Redirect, Route} from 'react-router-dom';\n\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n    this.state={\n     \n        user: '',    \n        email:'',\n        password:'',\n        emailError:'',\n        passwordError:'',\n        redirectPath: '',\n        officerName:'',\n        noteDate:'',\n        noteDescription:'',\n        note:'',\n        fetchedNotes:[],\n        rand: [{one: 'onee',two:'two'},{}]\n       \n\n    }\n  }\n\n\nclearFormInputs(){\n  this.setState({  officerName:'',\n  noteDate:'',\n  noteDescription:'',\n  note:'',\n fetchedNotes:[]\n})\n}\n\ngetNotes(){\n\nfire.firestore().collection('notes').get()\n.then(snapshot=>{\n  snapshot.forEach(doc=>{\nthis.setState(state=>({\n  fetchedNotes: [...state.fetchedNotes,doc.data() ]\n}))\n  })\n  console.log(`fetched ${this.state.fetchedNotes.length} notes` );\n  \n}).catch(e=>{console.log(e.message)}\n\n\n);\n\n\n}\n\n\nsubmitNotes(){\nalert(`submitted name ${this.state.officerName} date ${this.state.noteDate}` );\n\nfire.firestore().collection('notes').add({\n  officerName:this.state.officerName,\n  noteDate:this.state.noteDate,\n  noteDescription:this.state.noteDescription,\n  note:this.state.note,\n\n}).then(docref=>{console.log('Document added with ID' + docref.id)}).catch(e=>console.log(e.message))\n\n\n\nthis.clearFormInputs();\n\n\n}\n\n\nclearInputs(){\n  this.setState({email:'',password:''});\n}\n\nclearErrors(){\n  this.setState({emailError:'',passwordError:''});\n}\n\nhandleLogin(){\n  this.clearErrors();\n  \n  \n   fire.auth().signOut().then(()=>{ console.log('signout successful')}).catch((error)=>{ console.log('error') }); \n\n  fire\n  .auth()\n  .signInWithEmailAndPassword(this.state.email,this.state.password)\n .then((user)=>{\n\n  console.log(user);\n  this.setState({redirectPath:\"/homepage\"})\n  this.setState({redirect :true});\n \n})\n  .catch( err =>{\n   \n      switch(err.code){\n      case \"auth/invalid-email\":\n      case \"auth/user-disabled\":\n      case \"auth/user-not-found\":\n        this.setState({emailError: err.message} ); // update email error state\n          break;\n      case \"auth/wrong-password\":\nthis.setState({passwordError:err.message}); // update error message state\n                      break;\n                      \n                      \n\n   }   \n  });\n\n \n    \n  \n     \n   \n\n}\n\nhandleLogout(){\n  \n  fire.auth()\n  .signOut()\n  .then(()=>{\n  this.setState({redirect:false})\n  console.log(\"logged out\");\n  })\n  .catch((error)=>{ console.log('error') }); \nthis.setState({redirectPath :''});\n\n} \n\n\nhandleOfficerNameChange(e){\n\n  this.setState({officerName: e.target.value});\n  \n}\n\n\n\nhandleDateChange(e){\n  this.setState({noteDate: e.target.value});\n}\n\nhandleNoteChange(e){\nthis.setState({note: e.target.value});\n}\n\nhandleDescriptionChange(e){\n  this.setState({noteDescription: e.target.value});\n}\n\nhandleEmailChange(e){\n  this.setState(\n     {email: e.target.value} \n          );\n\n         \n}\n\nhandlePasswordChange(e){\n  this.setState({password: e.target.value});\n}\n\n\nrouteToMyNotes(){\n \n  this.setState({redirectPath: '/mynotes'})\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n  render(){\n    const{redirectPath} = this.state;\n    \n    return(\n\n <Router>\n\n<div className=\"App\">\n  \n      \n      <Redirect to={redirectPath}/>\n\n      { redirectPath === '/mynotes'? <Route path={redirectPath} render={(props)=>(\n        <MyNotes rand={this.state.rand}  fetchedNotes ={this.state.fetchedNotes} getNotes={this.getNotes.bind(this)}></MyNotes>\n      )}></Route> : <div></div>}\n  \n\n\n      { redirectPath==='/homepage' ?\n       <Route path ={redirectPath} render={(props)=>(\n        <Homepage   \n        routeToMyNotes={this.routeToMyNotes.bind(this)}  \n        handleLogout = {this.handleLogout.bind(this)}\n        handleDateChange={this.handleDateChange.bind(this)}\n        handleDescriptionChange={this.handleDescriptionChange.bind(this)}\n        handleNoteChange={this.handleNoteChange.bind(this)}\n        handleOfficerNameChange={this.handleOfficerNameChange.bind(this)}\n        submitNotes={this.submitNotes.bind(this)}\n        note = {this.state.note}\n        noteDate={this.state.noteDate}\n        noteDescription={this.state.noteDescription}\n        officerName={this.state.officerName}\n        />\n      )}></Route> :<div></div>\n      }\n      \n\n\n\n      { redirectPath === ''?\n      <div className=\"login\">\n      <div className=\"container\">\n\n       \n        { redirectPath ===''?\n\n\n        <  Login \n        handleEmailChange = {this.handleEmailChange.bind(this)}\n        handlePasswordChange={this.handlePasswordChange.bind(this)}\n        handleLogin={this.handleLogin.bind(this)}\n        emailError = {this.state.emailError}\n        passwordError={this.state.passwordError }\n        />:\n       \n       <div></div> }\n     \n      </div> \n\n  </div>:<div></div>\n}\n\n\n </div>\n\n\n\n\n </Router>\n\n\n\n  \n    )\n    \n  }\n}\n\n\nexport default App;\n","D:\\Projects\\React\\fieldnotesmanager\\src\\components\\login\\login.jsx",["40","41"],"import React from \"react\";\r\nimport loginImg from \"../../login.svg\";\r\n\r\n\r\nexport class Login extends React.Component{\r\nconstructor(props){\r\n    super(props);\r\n}\r\n\r\n\r\n\r\n render(){\r\n     return (\r\n     <div className=\"base-container\" ref={this.props.containerRef}>\r\n     <div className=\"header\">Login</div>\r\n     <div className=\"content\">\r\n     <div className=\"image\">\r\n         <img src={loginImg} />\r\n     </div>\r\n     <div className=\"form\">\r\n             <div className=\"form-group\">\r\n                 <label htmlFor=\"Email\">Email</label>\r\n                 <input type=\"text\" name=\"Email\" placeholder=\"email\" onChange={this.props.handleEmailChange}/>\r\n     <div className=\"errorMessage\">{this.props.emailError}</div>\r\n             </div>\r\n             <div className=\"form-group\">\r\n                 <label htmlFor=\"Password\">Password</label>\r\n                 <input type=\"password\" name=\"password\" placeholder=\"password\" onChange={this.props.handlePasswordChange}/>\r\n     <div className=\"errorMessage\">{this.props.passwordError}</div>\r\n             </div>\r\n     </div>\r\n     </div>\r\n     <div className=\"footer\">\r\n         <buttom type=\"button\" className=\"btn\" onClick={this.props.handleLogin}>\r\nLogin\r\n         </buttom>\r\n     </div>\r\n    \r\n     \r\n </div>)\r\n     \r\n }\r\n\r\n}","D:\\Projects\\React\\fieldnotesmanager\\src\\components\\homepage.jsx",["42"],"D:\\Projects\\React\\fieldnotesmanager\\src\\components\\mynotes.jsx",["43"],"D:\\Projects\\React\\fieldnotesmanager\\src\\index.js",[],"D:\\Projects\\React\\fieldnotesmanager\\src\\components\\login\\index.jsx",[],"D:\\Projects\\React\\fieldnotesmanager\\src\\reportWebVitals.js",[],{"ruleId":"44","severity":1,"message":"45","line":5,"column":1,"nodeType":"46","messageId":"47","endLine":7,"endColumn":2},{"ruleId":"48","severity":1,"message":"49","line":3,"column":17,"nodeType":"50","messageId":"51","endLine":3,"endColumn":25},{"ruleId":"52","severity":1,"message":"53","line":104,"column":7,"nodeType":"54","messageId":"55","endLine":116,"endColumn":5},{"ruleId":"44","severity":1,"message":"45","line":6,"column":1,"nodeType":"46","messageId":"47","endLine":8,"endColumn":2},{"ruleId":"56","severity":1,"message":"57","line":18,"column":10,"nodeType":"58","endLine":18,"endColumn":32},{"ruleId":"44","severity":1,"message":"45","line":8,"column":1,"nodeType":"46","messageId":"47","endLine":10,"endColumn":2},{"ruleId":"44","severity":1,"message":"45","line":4,"column":1,"nodeType":"46","messageId":"47","endLine":6,"endColumn":2},"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-unused-vars","'Register' is defined but never used.","Identifier","unusedVar","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]